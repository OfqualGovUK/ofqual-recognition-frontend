@using Ofqual.Recognition.Frontend.Web.ViewModels
@model QuestionViewModel

@{
    var textInput = Model?.QuestionContent?.FormGroup?.TextInput;
    var textInputs = textInput?.TextInputs;
}

@if (textInputs != null && textInputs.Any())
{
    <fieldset class="govuk-fieldset">

        @if (!string.IsNullOrEmpty(textInput?.Heading?.Text))
        {
            var labelSize = Model?.QuestionContent?.Heading != null ? textInput.Heading.Size : "l";

            if (Model?.QuestionContent?.Heading == null)
            {
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--@labelSize">
                    <h1 class="govuk-fieldset__heading">@textInput.Heading.Text</h1>
                </legend>
            }
            else
            {
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--@labelSize">
                    @textInput.Heading.Text
                </legend>
            }
        }

        @foreach (var item in textInputs)
        {
            <div class="govuk-form-group">
                <label class="govuk-label govuk-label--s" for="@item.Name">
                    @item.Label
                </label>
                @if (!string.IsNullOrEmpty(item.Hint))
                {
                    <div id="@item.Name-hint" class="govuk-hint">
                        @item.Hint
                    </div>
                }
                <input class="govuk-input"
                       id="@item.Name"
                       name="@item.Name"
                       type="text"
                       aria-describedby="@item.Name-hint"
                @(item.Disabled ? "disabled" : "")
                       maxlength="@item.Validation?.MaxLength"
                       minlength="@item.Validation?.MinLength"
                       pattern="@item.Validation?.Pattern" />
            </div>
        }
    </fieldset>
}