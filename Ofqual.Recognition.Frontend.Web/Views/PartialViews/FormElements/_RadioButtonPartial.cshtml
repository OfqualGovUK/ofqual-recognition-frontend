@using Ofqual.Recognition.Frontend.Web.ViewModels
@using Ofqual.Recognition.Frontend.Core.Helpers
@model QuestionViewModel

@{
    var radioButton = Model?.QuestionContent?.FormGroup?.RadioButton;
    var radioButtons = radioButton?.Radios;
    var name = radioButton?.Name ?? "radio-button";
    var hintId = $"{name}-hint";
    var errorId = $"{name}-error";
    var error = Model?.Errors?.FirstOrDefault(e => e.PropertyName == name);
    var hasError = error != null;

    var describedByParts = new List<string>();
    if (!string.IsNullOrWhiteSpace(hintId)) describedByParts.Add(hintId);
    if (hasError) describedByParts.Add(errorId);
    var describedBy = string.Join(" ", describedByParts);
}

@if (radioButtons != null && radioButtons.Any())
{
    <div class="govuk-form-group @(hasError ? "govuk-form-group--error" : "")">
        <fieldset class="govuk-fieldset" aria-describedby="@describedBy">

           @if (!string.IsNullOrEmpty(radioButton?.Heading?.Text))
            {
                var labelSize = Model?.QuestionContent?.Heading != null ? radioButton.Heading.Size : "l";
                var headingText = radioButton.Heading.Text;
                
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--@labelSize">
                    @if (Model?.QuestionContent?.Heading == null)
                    {
                        <h1 class="govuk-fieldset__heading">@headingText</h1>
                    }
                    else
                    {
                        @headingText
                    }
                </legend>
            }

            @if (!string.IsNullOrEmpty(radioButton?.Hint))
            {
                <div id="@hintId" class="govuk-hint">
                    @radioButton.Hint
                </div>
            }

            @if (hasError)
            {
                <p id="@errorId" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @error!.ErrorMessage
                </p>
            }

            @if (!string.IsNullOrEmpty(radioButton?.Paragraph))
            {
                <p class="govuk-body-m">
                    @radioButton.Paragraph
                </p>
            }

            <div class="govuk-radios" data-module="govuk-radios">
                @for (int i = 0; i < radioButtons.Count; i++)
                {
                    var item = radioButtons[i];
                    var itemId = i == 0 ? name : $"{name}-{i}";
                    var itemHintId = $"{itemId}-hint";
                    var selectedValue = ViewHelpers.GetAnswerValue(name, Model?.AnswerJson);

                    <div class="govuk-radios__item">
                        <input class="govuk-radios__input"
                               id="@itemId"
                               name="@name"
                               type="radio"
                               value="@item.Value"
                               aria-describedby="@(string.IsNullOrEmpty(item.Hint) ? null : itemHintId)"
                               @(item.Value == selectedValue ? "checked" : "") />
                        
                        <label class="govuk-label govuk-radios__label" for="@itemId">
                            @item.Label
                        </label>

                        @if (!string.IsNullOrEmpty(item.Hint))
                        {
                            <div id="@itemHintId" class="govuk-hint govuk-radios__hint">
                                @item.Hint
                            </div>
                        }
                    </div>
                }
            </div>
        </fieldset>
    </div>
}