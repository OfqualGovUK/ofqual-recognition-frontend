@using Ofqual.Recognition.Frontend.Core.Constants
@using Ofqual.Recognition.Frontend.Core.Enums
@using Ofqual.Recognition.Frontend.Web.ViewModels
@model TaskReviewViewModel

@{
    var backLinkUrl = Model.IsCompletedStatus
    ? RouteConstants.ApplicationConstants.TASK_LIST_PATH
    : $"{RouteConstants.ApplicationConstants.APPLICATION_PATH}/{Model.LastQuestionUrl}";
}

@section BackLink {
    <a href="@backLinkUrl" class="govuk-back-link">Back</a>
}

<h1 class="govuk-heading-l">
    Check your answers
</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        @if (Model.QuestionAnswerSections.Any(s => string.IsNullOrWhiteSpace(s.SectionHeading)))
        {
            <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                @foreach (var section in Model.QuestionAnswerSections.Where(s =>
                           string.IsNullOrWhiteSpace(s.SectionHeading)))
                {
                    foreach (var question in section.QuestionAnswers)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">@question.QuestionText</dt>
                            <dd class="govuk-summary-list__value">
                                @foreach (var answer in question.AnswerValue)
                                {
                                    <div class="summary-list-value-item">@answer</div>
                                }
                            </dd>
                            @if (!(bool)(ViewData["ApplicationReadOnly"] ?? false))
                            {
                                <dd class="govuk-summary-list__actions">
                                    <a class="govuk-link"
                                    href="@($"{RouteConstants.ApplicationConstants.APPLICATION_PATH}/{question.QuestionUrl}?fromReview=true")">
                                        Change<span class="govuk-visually-hidden">@question.QuestionText</span>
                                    </a>
                                </dd>
                            }
                        </div>
                    }
                }
            </dl>
        }

        @foreach (var sectionItem in Model.QuestionAnswerSections.Where(s => !string.IsNullOrWhiteSpace(s.SectionHeading)))
        {
            <h2 class="govuk-heading-m">@sectionItem.SectionHeading</h2>
            <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                @foreach (var question in sectionItem.QuestionAnswers)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">@question.QuestionText</dt>
                        <dd class="govuk-summary-list__value">
                            @foreach (var answer in question.AnswerValue)
                            {
                                <div>@answer</div>
                            }
                        </dd>
                        @if (!(bool)(ViewData["ApplicationReadOnly"] ?? false))
                        {
                            <dd class="govuk-summary-list__actions">
                                <a class="govuk-link"
                                href="@($"{RouteConstants.ApplicationConstants.APPLICATION_PATH}/{question.QuestionUrl}?fromReview=true")">
                                    Change<span class="govuk-visually-hidden">@question.QuestionText</span>
                                </a>
                            </dd>
                        }
                    </div>
                }
            </dl>
        }

        @if (!(bool)(ViewData["ApplicationReadOnly"] ?? false))
        {
            <div class="govuk-form-group">
                <form method="post">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <h2 class="govuk-fieldset__heading">
                                Have you completed this section?
                            </h2>
                        </legend>
                        <div class="govuk-radios" data-module="govuk-radios">
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="yes" name="answer" type="radio"
                                       value="@( (int)StatusType.Completed )" @(Model.Answer == StatusType.Completed ? "checked" : "")>
                                <label class="govuk-label govuk-radios__label" for="yes">
                                    Yes, I've completed this section
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="no" name="answer" type="radio"
                                       value="@( (int)StatusType.InProgress )" @(Model.Answer == StatusType.InProgress ? "checked" : "")>
                                <label class="govuk-label govuk-radios__label" for="no">
                                    No, I'll come back to it later
                                </label>
                            </div>
                        </div>

                        @Html.AntiForgeryToken()
                        <div class="govuk-button-group govuk-!-margin-top-5">
                            <button type="submit" class="govuk-button">Save and continue</button>
                            <a class="govuk-link" href="@(RouteConstants.ApplicationConstants.TASK_LIST_PATH)">Cancel</a>
                        </div>

                    </fieldset>
                </form>
            </div>
        }
    </div>
</div>